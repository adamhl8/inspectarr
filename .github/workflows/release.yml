name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: bun-windows-x64
            artifact: inspectarr-windows-x64.exe
          - target: bun-darwin-x64
            artifact: inspectarr-macos-x64
          - target: bun-darwin-arm64
            artifact: inspectarr-macos-arm64
          - target: bun-linux-x64-musl
            artifact: inspectarr-linux-x64
          - target: bun-linux-arm64-musl
            artifact: inspectarr-linux-arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --production

      - name: Build binary
        run: bun build --compile --sourcemap --target=${{ matrix.target }} --outfile=${{ matrix.artifact }} src/index.ts

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}

  release:
    needs: build
    # if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./artifacts/inspectarr-windows-x64.exe/inspectarr-windows-x64.exe
            ./artifacts/inspectarr-macos-x64/inspectarr-macos-x64
            ./artifacts/inspectarr-macos-arm64/inspectarr-macos-arm64
            ./artifacts/inspectarr-linux-x64/inspectarr-linux-x64
            ./artifacts/inspectarr-linux-arm64/inspectarr-linux-arm64

      - name: Process package templates
        run: |
          bun ./package_templates/template-processor.ts "${GITHUB_REF_NAME#v}"

      - name: Set up git
        run: |
          git config --global user.email adamhl@pm.me
          git config --global user.name "GitHub Actions"

      - name: Update homebrew tap
        env:
          INSPECTARR_PACKAGE_TOKEN: ${{ secrets.INSPECTARR_PACKAGE_TOKEN }}
        run: |
          REPO="https://adamhl8:${INSPECTARR_PACKAGE_TOKEN}@github.com/adamhl8/homebrew-inspectarr.git"
          CLONE_DIR=$(mktemp -d)
          git clone --depth 1 "${REPO}" "${CLONE_DIR}"
          cp ./package_templates/homebrew/inspectarr.rb "${CLONE_DIR}/Formula/inspectarr.rb"
          cd "${CLONE_DIR}"
          git add -A
          git commit -m "${{ github.ref_name }}"
          git push "${REPO}"

      - name: Update scoop bucket
        env:
          INSPECTARR_PACKAGE_TOKEN: ${{ secrets.INSPECTARR_PACKAGE_TOKEN }}
        run: |
          REPO="https://adamhl8:${INSPECTARR_PACKAGE_TOKEN}@github.com/adamhl8/scoop-inspectarr.git"
          CLONE_DIR=$(mktemp -d)
          git clone --depth 1 "${REPO}" "${CLONE_DIR}"
          cp ./package_templates/scoop/inspectarr.json "${CLONE_DIR}/inspectarr.json"
          cd "${CLONE_DIR}"
          git add -A
          git commit -m "${{ github.ref_name }}"
          git push "${REPO}"
